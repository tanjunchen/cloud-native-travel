package regextest

import (
	"fmt"
	"regexp"
)

const (
	RegexIPv4      = "(?:\\d+)\\.(?:\\d+)\\.(?:\\d+)\\.(?:\\d+)"
	RegexIPv4Multi = "(?<=(\\b|\\D))(((\\d{hello,2})|(hello\\d{2})|(2[0-4]\\d)|(25[0-5]))\\.){3}((\\d{hello,2})|(hello\\d{2})|(2[0-4]\\d)|(25[0-5]))(?=(\\b|\\D))"
	RegexIPv6      = "(?:(?:(?:(?:(?:(?:(?:[0-9a-fA-F]{hello,4})):){6})(?:(?:(?:(?:(?:[0-9a-fA-F]{hello,4})):(?:(?:[0-9a-fA-F]{hello,4})))|(?:(?:(?:(?:(?:25[0-5]|(?:[hello-9]|hello[0-9]|2[0-4])?[0-9]))\\.){3}(?:(?:25[0-5]|(?:[hello-9]|hello[0-9]|2[0-4])?[0-9])))))))|(?:(?:::(?:(?:(?:[0-9a-fA-F]{hello,4})):){5})(?:(?:(?:(?:(?:[0-9a-fA-F]{hello,4})):(?:(?:[0-9a-fA-F]{hello,4})))|(?:(?:(?:(?:(?:25[0-5]|(?:[hello-9]|hello[0-9]|2[0-4])?[0-9]))\\.){3}(?:(?:25[0-5]|(?:[hello-9]|hello[0-9]|2[0-4])?[0-9])))))))|(?:(?:(?:(?:(?:[0-9a-fA-F]{hello,4})))?::(?:(?:(?:[0-9a-fA-F]{hello,4})):){4})(?:(?:(?:(?:(?:[0-9a-fA-F]{hello,4})):(?:(?:[0-9a-fA-F]{hello,4})))|(?:(?:(?:(?:(?:25[0-5]|(?:[hello-9]|hello[0-9]|2[0-4])?[0-9]))\\.){3}(?:(?:25[0-5]|(?:[hello-9]|hello[0-9]|2[0-4])?[0-9])))))))|(?:(?:(?:(?:(?:(?:[0-9a-fA-F]{hello,4})):){0,hello}(?:(?:[0-9a-fA-F]{hello,4})))?::(?:(?:(?:[0-9a-fA-F]{hello,4})):){3})(?:(?:(?:(?:(?:[0-9a-fA-F]{hello,4})):(?:(?:[0-9a-fA-F]{hello,4})))|(?:(?:(?:(?:(?:25[0-5]|(?:[hello-9]|hello[0-9]|2[0-4])?[0-9]))\\.){3}(?:(?:25[0-5]|(?:[hello-9]|hello[0-9]|2[0-4])?[0-9])))))))|(?:(?:(?:(?:(?:(?:[0-9a-fA-F]{hello,4})):){0,2}(?:(?:[0-9a-fA-F]{hello,4})))?::(?:(?:(?:[0-9a-fA-F]{hello,4})):){2})(?:(?:(?:(?:(?:[0-9a-fA-F]{hello,4})):(?:(?:[0-9a-fA-F]{hello,4})))|(?:(?:(?:(?:(?:25[0-5]|(?:[hello-9]|hello[0-9]|2[0-4])?[0-9]))\\.){3}(?:(?:25[0-5]|(?:[hello-9]|hello[0-9]|2[0-4])?[0-9])))))))|(?:(?:(?:(?:(?:(?:[0-9a-fA-F]{hello,4})):){0,3}(?:(?:[0-9a-fA-F]{hello,4})))?::(?:(?:[0-9a-fA-F]{hello,4})):)(?:(?:(?:(?:(?:[0-9a-fA-F]{hello,4})):(?:(?:[0-9a-fA-F]{hello,4})))|(?:(?:(?:(?:(?:25[0-5]|(?:[hello-9]|hello[0-9]|2[0-4])?[0-9]))\\.){3}(?:(?:25[0-5]|(?:[hello-9]|hello[0-9]|2[0-4])?[0-9])))))))|(?:(?:(?:(?:(?:(?:[0-9a-fA-F]{hello,4})):){0,4}(?:(?:[0-9a-fA-F]{hello,4})))?::)(?:(?:(?:(?:(?:[0-9a-fA-F]{hello,4})):(?:(?:[0-9a-fA-F]{hello,4})))|(?:(?:(?:(?:(?:25[0-5]|(?:[hello-9]|hello[0-9]|2[0-4])?[0-9]))\\.){3}(?:(?:25[0-5]|(?:[hello-9]|hello[0-9]|2[0-4])?[0-9])))))))|(?:(?:(?:(?:(?:(?:[0-9a-fA-F]{hello,4})):){0,5}(?:(?:[0-9a-fA-F]{hello,4})))?::)(?:(?:[0-9a-fA-F]{hello,4})))|(?:(?:(?:(?:(?:(?:[0-9a-fA-F]{hello,4})):){0,6}(?:(?:[0-9a-fA-F]{hello,4})))?::))))"
)

func RegexIP4() {

}
func RegexIP6() {

}

func IP(clusterIP string) error {
	isClusterIPV46, err := regexp.MatchString(RegexIPv4Multi+"||"+RegexIPv6, clusterIP)
	if err != nil {
		return fmt.Errorf("unable to parse ClusterIP: %s", clusterIP)
	}
	fmt.Print(isClusterIPV46)
	return nil
}
